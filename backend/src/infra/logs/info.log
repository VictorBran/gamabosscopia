{"level":"error","message":"[createConnection] Conexão Recusada:TypeError [ERR_INVALID_URL]: Invalid URL","service":"user-service","timestamp":"2022-07-29T01:25:56.711Z"}
{"level":"info","message":"[setup] API em execução.","service":"user-service","timestamp":"2022-07-29T01:25:56.734Z"}
{"level":"info","message":"[createConnection] Conexão com o banco de dados realizada.","service":"user-service","timestamp":"2022-07-29T01:35:20.519Z"}
{"level":"info","message":"[setup] API em execução.","service":"user-service","timestamp":"2022-07-29T01:35:20.534Z"}
{"level":"info","message":"[createConnection] Conexão com o banco de dados realizada.","service":"user-service","timestamp":"2022-07-29T01:39:17.284Z"}
{"level":"info","message":"[setup] API em execução.","service":"user-service","timestamp":"2022-07-29T01:39:17.299Z"}
{"level":"info","message":"[createConnection] Conexão com o banco de dados realizada.","service":"user-service","timestamp":"2022-07-29T23:40:11.862Z"}
{"level":"info","message":"[setup] API em execução.","service":"user-service","timestamp":"2022-07-29T23:40:11.877Z"}
{"level":"info","message":"[createConnection] Conexão com o banco de dados realizada.","service":"user-service","timestamp":"2022-07-29T23:43:39.965Z"}
{"level":"info","message":"[setup] API em execução.","service":"user-service","timestamp":"2022-07-29T23:43:39.979Z"}
{"level":"info","message":"[createClient] Cliente cadastrado: ::ffff:127.0.0.1","service":"user-service","timestamp":"2022-07-29T23:43:44.985Z"}
{"level":"info","message":"[createConnection] Conexão com o banco de dados realizada.","service":"user-service","timestamp":"2022-07-29T23:48:31.077Z"}
{"level":"info","message":"[setup] API em execução.","service":"user-service","timestamp":"2022-07-29T23:48:31.090Z"}
{"level":"info","message":"[createConnection] Conexão com o banco de dados realizada.","service":"user-service","timestamp":"2022-07-30T00:06:46.601Z"}
{"level":"info","message":"[setup] API em execução.","service":"user-service","timestamp":"2022-07-30T00:06:46.616Z"}
{"level":"info","message":"[createConnection] Conexão com o banco de dados realizada.","service":"user-service","timestamp":"2022-07-30T00:09:27.790Z"}
{"level":"info","message":"[setup] API em execução.","service":"user-service","timestamp":"2022-07-30T00:09:27.807Z"}
{"level":"info","message":"[createConnection] Conexão com o banco de dados realizada.","service":"user-service","timestamp":"2022-07-30T00:18:35.074Z"}
{"level":"info","message":"[setup] API em execução.","service":"user-service","timestamp":"2022-07-30T00:18:35.088Z"}
{"level":"warn","message":"[createClient] Tentativa repetida de cadastro: ::ffff:127.0.0.1","service":"user-service","timestamp":"2022-07-30T00:21:06.650Z"}
{"level":"info","message":"[createClient] Cliente cadastrado: ::ffff:127.0.0.1","service":"user-service","timestamp":"2022-07-30T00:21:11.130Z"}
{"level":"info","message":"[createConnection] Conexão com o banco de dados realizada.","service":"user-service","timestamp":"2022-07-30T00:27:01.776Z"}
{"level":"info","message":"[setup] API em execução.","service":"user-service","timestamp":"2022-07-30T00:27:01.790Z"}
{"level":"info","message":"[createConnection] Conexão com o banco de dados realizada.","service":"user-service","timestamp":"2022-07-30T00:27:37.854Z"}
{"level":"info","message":"[setup] API em execução.","service":"user-service","timestamp":"2022-07-30T00:27:37.867Z"}
{"level":"warn","message":"[createClient] Tentativa repetida de cadastro: ::1","service":"user-service","timestamp":"2022-07-30T00:27:41.591Z"}
{"level":"info","message":"[createConnection] Conexão com o banco de dados realizada.","service":"user-service","timestamp":"2022-07-30T00:29:16.861Z"}
{"level":"info","message":"[setup] Teste de configuração executado.","service":"user-service","timestamp":"2022-07-30T00:29:16.866Z"}
{"level":"info","message":"[createConnection] Conexão com o banco de dados realizada.","service":"user-service","timestamp":"2022-07-30T00:45:09.642Z"}
{"level":"info","message":"[setup] Teste de configuração executado.","service":"user-service","timestamp":"2022-07-30T00:45:09.646Z"}
{"level":"info","message":"[createConnection] Conexão com o banco de dados realizada.","service":"user-service","timestamp":"2022-07-30T00:45:28.618Z"}
{"level":"info","message":"[setup] Teste de configuração executado.","service":"user-service","timestamp":"2022-07-30T00:45:28.622Z"}
{"level":"info","message":"[createConnection] Conexão com o banco de dados realizada.","service":"user-service","timestamp":"2022-07-30T00:46:48.259Z"}
{"level":"info","message":"[setup] Teste de configuração executado.","service":"user-service","timestamp":"2022-07-30T00:46:48.264Z"}
{"level":"info","message":"[createConnection] Conexão com o banco de dados realizada.","service":"user-service","timestamp":"2022-07-30T00:47:21.759Z"}
{"level":"info","message":"[setup] API em execução.","service":"user-service","timestamp":"2022-07-30T00:47:21.776Z"}
{"level":"info","message":"[createConnection] Conexão com o banco de dados realizada.","service":"user-service","timestamp":"2022-07-30T05:53:43.584Z"}
{"level":"info","message":"[setup] API em execução.","service":"user-service","timestamp":"2022-07-30T05:53:43.603Z"}
{"level":"info","message":"[createConnection] Conexão com o banco de dados realizada.","service":"user-service","timestamp":"2022-07-30T05:59:40.770Z"}
{"level":"info","message":"[setup] API em execução.","service":"user-service","timestamp":"2022-07-30T05:59:40.785Z"}
{"level":"info","message":"[createConnection] Conexão com o banco de dados realizada.","service":"user-service","timestamp":"2022-07-30T06:01:39.821Z"}
{"level":"info","message":"[setup] API em execução.","service":"user-service","timestamp":"2022-07-30T06:01:39.841Z"}
{"level":"info","message":"[createPet]Pet cadastrado: ::ffff:127.0.0.1","service":"user-service","timestamp":"2022-07-30T06:01:43.172Z"}
{"level":"info","message":"[editPet] Pet editado: ::ffff:127.0.0.1","service":"user-service","timestamp":"2022-07-30T06:04:48.852Z"}
{"level":"info","message":"[createConnection] Conexão com o banco de dados realizada.","service":"user-service","timestamp":"2022-07-30T06:05:51.125Z"}
{"level":"info","message":"[setup] API em execução.","service":"user-service","timestamp":"2022-07-30T06:05:51.144Z"}
{"level":"info","message":"[editPet] Pet editado: ::ffff:127.0.0.1","service":"user-service","timestamp":"2022-07-30T06:05:58.282Z"}
{"level":"info","message":"[createConnection] Conexão com o banco de dados realizada.","service":"user-service","timestamp":"2022-07-30T06:15:17.506Z"}
{"level":"info","message":"[setup] API em execução.","service":"user-service","timestamp":"2022-07-30T06:15:17.523Z"}
{"level":"warn","message":"[updatePet] Pet não cadastrado: ::ffff:127.0.0.1","service":"user-service","timestamp":"2022-07-30T06:15:26.961Z"}
{"level":"warn","message":"[updatePet] Pet não cadastrado: ::ffff:127.0.0.1","service":"user-service","timestamp":"2022-07-30T06:16:11.460Z"}
{"level":"info","message":"[createConnection] Conexão com o banco de dados realizada.","service":"user-service","timestamp":"2022-07-30T06:17:02.414Z"}
{"level":"info","message":"[setup] API em execução.","service":"user-service","timestamp":"2022-07-30T06:17:02.429Z"}
{"level":"info","message":"[editPet] Pet editado: ::ffff:127.0.0.1","service":"user-service","timestamp":"2022-07-30T06:17:12.088Z"}
{"level":"info","message":"[createConnection] Conexão com o banco de dados realizada.","service":"user-service","timestamp":"2022-07-30T12:32:12.899Z"}
{"level":"info","message":"[setup] API em execução.","service":"user-service","timestamp":"2022-07-30T12:32:12.920Z"}
{"level":"info","message":"[editPet] Pet editado: ::ffff:127.0.0.1","service":"user-service","timestamp":"2022-07-30T12:32:40.042Z"}
{"level":"info","message":"[createConnection] Conexão com o banco de dados realizada.","service":"user-service","timestamp":"2022-07-30T12:33:03.013Z"}
{"level":"info","message":"[setup] API em execução.","service":"user-service","timestamp":"2022-07-30T12:33:03.029Z"}
{"level":"info","message":"[editPet] Pet editado: ::ffff:127.0.0.1","service":"user-service","timestamp":"2022-07-30T12:33:18.002Z"}
{"level":"info","message":"[createConnection] Conexão com o banco de dados realizada.","service":"user-service","timestamp":"2022-07-30T12:35:36.548Z"}
{"level":"info","message":"[setup] API em execução.","service":"user-service","timestamp":"2022-07-30T12:35:36.562Z"}
{"level":"info","message":"[editPet] Pet editado: ::ffff:127.0.0.1","service":"user-service","timestamp":"2022-07-30T12:35:47.397Z"}
{"level":"info","message":"[createConnection] Conexão com o banco de dados realizada.","service":"user-service","timestamp":"2022-07-30T12:39:43.970Z"}
{"level":"info","message":"[setup] API em execução.","service":"user-service","timestamp":"2022-07-30T12:39:43.984Z"}
{"level":"info","message":"[createConnection] Conexão com o banco de dados realizada.","service":"user-service","timestamp":"2022-07-30T12:39:53.863Z"}
{"level":"info","message":"[setup] API em execução.","service":"user-service","timestamp":"2022-07-30T12:39:53.882Z"}
{"level":"info","message":"[createConnection] Conexão com o banco de dados realizada.","service":"user-service","timestamp":"2022-07-30T12:45:12.106Z"}
{"level":"info","message":"[setup] API em execução.","service":"user-service","timestamp":"2022-07-30T12:45:12.120Z"}
{"level":"info","message":"[editPet] Pet editado: ::ffff:127.0.0.1","service":"user-service","timestamp":"2022-07-30T12:45:59.487Z"}
{"level":"info","message":"[createConnection] Conexão com o banco de dados realizada.","service":"user-service","timestamp":"2022-07-30T12:46:25.487Z"}
{"level":"info","message":"[setup] API em execução.","service":"user-service","timestamp":"2022-07-30T12:46:25.501Z"}
{"level":"info","message":"[editPet] Pet editado: ::ffff:127.0.0.1","service":"user-service","timestamp":"2022-07-30T12:46:27.131Z"}
{"level":"info","message":"[createConnection] Conexão com o banco de dados realizada.","service":"user-service","timestamp":"2022-07-30T13:41:58.823Z"}
{"level":"info","message":"[setup] API em execução.","service":"user-service","timestamp":"2022-07-30T13:41:58.838Z"}
{"level":"info","message":"[createConnection] Conexão com o banco de dados realizada.","service":"user-service","timestamp":"2022-07-30T13:42:43.758Z"}
{"level":"info","message":"[setup] API em execução.","service":"user-service","timestamp":"2022-07-30T13:42:43.802Z"}
{"level":"info","message":"[createConnection] Conexão com o banco de dados realizada.","service":"user-service","timestamp":"2022-07-30T13:44:21.226Z"}
{"level":"info","message":"[setup] API em execução.","service":"user-service","timestamp":"2022-07-30T13:44:21.240Z"}
{"level":"info","message":"[editPet] Pet editado: ::ffff:127.0.0.1","service":"user-service","timestamp":"2022-07-30T13:44:24.151Z"}
{"level":"info","message":"[createConnection] Conexão com o banco de dados realizada.","service":"user-service","timestamp":"2022-07-30T13:47:00.456Z"}
{"level":"info","message":"[setup] API em execução.","service":"user-service","timestamp":"2022-07-30T13:47:00.472Z"}
{"level":"info","message":"[editPet] Pet editado: ::ffff:127.0.0.1","service":"user-service","timestamp":"2022-07-30T13:47:04.486Z"}
{"level":"info","message":"[createConnection] Conexão com o banco de dados realizada.","service":"user-service","timestamp":"2022-07-30T13:48:57.020Z"}
{"level":"info","message":"[setup] API em execução.","service":"user-service","timestamp":"2022-07-30T13:48:57.034Z"}
{"level":"info","message":"[editPet] Pet editado: ::ffff:127.0.0.1","service":"user-service","timestamp":"2022-07-30T13:49:13.838Z"}
{"level":"info","message":"[createConnection] Conexão com o banco de dados realizada.","service":"user-service","timestamp":"2022-07-30T13:49:23.275Z"}
{"level":"info","message":"[setup] API em execução.","service":"user-service","timestamp":"2022-07-30T13:49:23.289Z"}
{"level":"info","message":"[createConnection] Conexão com o banco de dados realizada.","service":"user-service","timestamp":"2022-07-30T13:56:49.042Z"}
{"level":"info","message":"[setup] API em execução.","service":"user-service","timestamp":"2022-07-30T13:56:49.056Z"}
{"level":"info","message":"[createPet]Pet cadastrado: ::ffff:127.0.0.1","service":"user-service","timestamp":"2022-07-30T13:57:10.066Z"}
{"level":"info","message":"[createConnection] Conexão com o banco de dados realizada.","service":"user-service","timestamp":"2022-07-30T14:01:05.638Z"}
{"level":"info","message":"[setup] API em execução.","service":"user-service","timestamp":"2022-07-30T14:01:05.652Z"}
{"level":"info","message":"[createConnection] Conexão com o banco de dados realizada.","service":"user-service","timestamp":"2022-07-30T14:01:44.138Z"}
{"level":"info","message":"[setup] API em execução.","service":"user-service","timestamp":"2022-07-30T14:01:44.155Z"}
{"level":"info","message":"[createConnection] Conexão com o banco de dados realizada.","service":"user-service","timestamp":"2022-07-30T14:04:35.057Z"}
{"level":"info","message":"[setup] API em execução.","service":"user-service","timestamp":"2022-07-30T14:04:35.076Z"}
{"level":"info","message":"[createConnection] Conexão com o banco de dados realizada.","service":"user-service","timestamp":"2022-07-30T14:10:48.889Z"}
{"level":"info","message":"[setup] API em execução.","service":"user-service","timestamp":"2022-07-30T14:10:48.904Z"}
{"level":"info","message":"[createConnection] Conexão com o banco de dados realizada.","service":"user-service","timestamp":"2022-07-30T14:11:40.465Z"}
{"level":"info","message":"[setup] API em execução.","service":"user-service","timestamp":"2022-07-30T14:11:40.478Z"}
{"level":"info","message":"[createConnection] Conexão com o banco de dados realizada.","service":"user-service","timestamp":"2022-07-30T14:12:20.393Z"}
{"level":"info","message":"[setup] API em execução.","service":"user-service","timestamp":"2022-07-30T14:12:20.407Z"}
{"level":"info","message":"[createPet]Pet cadastrado: ::ffff:127.0.0.1","service":"user-service","timestamp":"2022-07-30T14:13:37.112Z"}
{"level":"info","message":"[createConnection] Conexão com o banco de dados realizada.","service":"user-service","timestamp":"2022-07-30T14:14:12.006Z"}
{"level":"info","message":"[setup] API em execução.","service":"user-service","timestamp":"2022-07-30T14:14:12.022Z"}
{"level":"info","message":"[createConnection] Conexão com o banco de dados realizada.","service":"user-service","timestamp":"2022-08-03T01:22:25.379Z"}
{"level":"info","message":"[setup] API em execução.","service":"user-service","timestamp":"2022-08-03T01:22:25.398Z"}
{"level":"info","message":"[createConnection] Conexão com o banco de dados realizada.","service":"user-service","timestamp":"2022-08-03T01:29:59.016Z"}
{"level":"info","message":"[setup] API em execução.","service":"user-service","timestamp":"2022-08-03T01:29:59.032Z"}
{"level":"info","message":"[createPet]Pet cadastrado: ::ffff:127.0.0.1","service":"user-service","timestamp":"2022-08-03T01:35:52.231Z"}
{"level":"info","message":"[createConnection] Conexão com o banco de dados realizada.","service":"user-service","timestamp":"2022-08-03T01:38:32.931Z"}
{"level":"info","message":"[setup] API em execução.","service":"user-service","timestamp":"2022-08-03T01:38:32.946Z"}
{"level":"info","message":"[createConnection] Conexão com o banco de dados realizada.","service":"user-service","timestamp":"2022-08-03T01:42:13.790Z"}
{"level":"info","message":"[setup] API em execução.","service":"user-service","timestamp":"2022-08-03T01:42:13.804Z"}
{"level":"info","message":"[createConnection] Conexão com o banco de dados realizada.","service":"user-service","timestamp":"2022-08-03T01:46:21.492Z"}
{"level":"info","message":"[setup] API em execução.","service":"user-service","timestamp":"2022-08-03T01:46:21.508Z"}
{"level":"info","message":"[createConnection] Conexão com o banco de dados realizada.","service":"user-service","timestamp":"2022-08-03T01:50:25.801Z"}
{"level":"info","message":"[setup] API em execução.","service":"user-service","timestamp":"2022-08-03T01:50:25.815Z"}
{"level":"info","message":"[createConnection] Conexão com o banco de dados realizada.","service":"user-service","timestamp":"2022-08-03T01:57:04.369Z"}
{"level":"info","message":"[setup] API em execução.","service":"user-service","timestamp":"2022-08-03T01:57:04.392Z"}
{"level":"error","message":"[getPetById]Erro ao atualizar dados do pet: CastError: Cast to ObjectId failed for value \"62e4c94737bb19a8986f55c8dono\" (type string) at path \"_id\" for model \"Pets\"-  ::ffff:127.0.0.1","service":"user-service","timestamp":"2022-08-03T02:07:49.536Z"}
{"level":"info","message":"[createConnection] Conexão com o banco de dados realizada.","service":"user-service","timestamp":"2022-08-03T02:10:53.364Z"}
{"level":"info","message":"[setup] API em execução.","service":"user-service","timestamp":"2022-08-03T02:10:53.381Z"}
{"level":"info","message":"[createConnection] Conexão com o banco de dados realizada.","service":"user-service","timestamp":"2022-08-03T02:38:03.381Z"}
{"level":"info","message":"[setup] API em execução.","service":"user-service","timestamp":"2022-08-03T02:38:03.397Z"}
{"level":"info","message":"[createConnection] Conexão com o banco de dados realizada.","service":"user-service","timestamp":"2022-08-03T02:41:10.164Z"}
{"level":"info","message":"[setup] API em execução.","service":"user-service","timestamp":"2022-08-03T02:41:10.179Z"}
{"level":"info","message":"[createConnection] Conexão com o banco de dados realizada.","service":"user-service","timestamp":"2022-08-03T02:42:32.968Z"}
{"level":"info","message":"[setup] API em execução.","service":"user-service","timestamp":"2022-08-03T02:42:32.981Z"}
{"level":"info","message":"[createConnection] Conexão com o banco de dados realizada.","service":"user-service","timestamp":"2022-08-03T02:44:41.137Z"}
{"level":"info","message":"[setup] API em execução.","service":"user-service","timestamp":"2022-08-03T02:44:41.152Z"}
{"level":"info","message":"[createConnection] Conexão com o banco de dados realizada.","service":"user-service","timestamp":"2022-08-03T02:48:28.845Z"}
{"level":"info","message":"[setup] API em execução.","service":"user-service","timestamp":"2022-08-03T02:48:28.858Z"}
{"level":"info","message":"[createConnection] Conexão com o banco de dados realizada.","service":"user-service","timestamp":"2022-08-03T02:49:25.033Z"}
{"level":"info","message":"[setup] API em execução.","service":"user-service","timestamp":"2022-08-03T02:49:25.046Z"}
{"level":"info","message":"[createConnection] Conexão com o banco de dados realizada.","service":"user-service","timestamp":"2022-08-03T02:51:42.120Z"}
{"level":"info","message":"[setup] API em execução.","service":"user-service","timestamp":"2022-08-03T02:51:42.135Z"}
{"level":"info","message":"[createConnection] Conexão com o banco de dados realizada.","service":"user-service","timestamp":"2022-08-03T02:53:37.425Z"}
{"level":"info","message":"[setup] API em execução.","service":"user-service","timestamp":"2022-08-03T02:53:37.437Z"}
{"level":"info","message":"[createConnection] Conexão com o banco de dados realizada.","service":"user-service","timestamp":"2022-08-03T02:58:16.109Z"}
{"level":"info","message":"[setup] API em execução.","service":"user-service","timestamp":"2022-08-03T02:58:16.123Z"}
{"level":"info","message":"[createConnection] Conexão com o banco de dados realizada.","service":"user-service","timestamp":"2022-08-03T03:00:59.197Z"}
{"level":"info","message":"[setup] API em execução.","service":"user-service","timestamp":"2022-08-03T03:00:59.212Z"}
{"level":"info","message":"[createConnection] Conexão com o banco de dados realizada.","service":"user-service","timestamp":"2022-08-03T03:02:13.263Z"}
{"level":"info","message":"[setup] API em execução.","service":"user-service","timestamp":"2022-08-03T03:02:13.277Z"}
{"level":"info","message":"[createConnection] Conexão com o banco de dados realizada.","service":"user-service","timestamp":"2022-08-03T03:02:57.180Z"}
{"level":"info","message":"[setup] API em execução.","service":"user-service","timestamp":"2022-08-03T03:02:57.194Z"}
{"level":"info","message":"[createConnection] Conexão com o banco de dados realizada.","service":"user-service","timestamp":"2022-08-03T03:17:42.326Z"}
{"level":"info","message":"[setup] API em execução.","service":"user-service","timestamp":"2022-08-03T03:17:42.339Z"}
{"level":"info","message":"[createConnection] Conexão com o banco de dados realizada.","service":"user-service","timestamp":"2022-08-03T03:18:59.432Z"}
{"level":"info","message":"[setup] API em execução.","service":"user-service","timestamp":"2022-08-03T03:18:59.450Z"}
{"level":"info","message":"[createConnection] Conexão com o banco de dados realizada.","service":"user-service","timestamp":"2022-08-03T03:20:35.615Z"}
{"level":"info","message":"[setup] API em execução.","service":"user-service","timestamp":"2022-08-03T03:20:35.630Z"}
{"level":"info","message":"[createConnection] Conexão com o banco de dados realizada.","service":"user-service","timestamp":"2022-08-03T03:24:44.252Z"}
{"level":"info","message":"[setup] API em execução.","service":"user-service","timestamp":"2022-08-03T03:24:44.267Z"}
{"level":"info","message":"[createConnection] Conexão com o banco de dados realizada.","service":"user-service","timestamp":"2022-08-03T03:26:26.075Z"}
{"level":"info","message":"[setup] API em execução.","service":"user-service","timestamp":"2022-08-03T03:26:26.089Z"}
{"level":"info","message":"[createConnection] Conexão com o banco de dados realizada.","service":"user-service","timestamp":"2022-08-03T03:35:03.016Z"}
{"level":"info","message":"[setup] API em execução.","service":"user-service","timestamp":"2022-08-03T03:35:03.030Z"}
{"level":"info","message":"[createConnection] Conexão com o banco de dados realizada.","service":"user-service","timestamp":"2022-08-03T03:35:42.182Z"}
{"level":"info","message":"[setup] API em execução.","service":"user-service","timestamp":"2022-08-03T03:35:42.200Z"}
{"level":"info","message":"[createConnection] Conexão com o banco de dados realizada.","service":"user-service","timestamp":"2022-08-03T03:40:48.461Z"}
{"level":"info","message":"[setup] API em execução.","service":"user-service","timestamp":"2022-08-03T03:40:48.476Z"}
{"level":"info","message":"[createConnection] Conexão com o banco de dados realizada.","service":"user-service","timestamp":"2022-08-03T03:45:51.406Z"}
{"level":"info","message":"[setup] API em execução.","service":"user-service","timestamp":"2022-08-03T03:45:51.428Z"}
{"level":"info","message":"[createConnection] Conexão com o banco de dados realizada.","service":"user-service","timestamp":"2022-08-03T04:25:31.040Z"}
{"level":"info","message":"[setup] API em execução.","service":"user-service","timestamp":"2022-08-03T04:25:31.054Z"}
{"level":"info","message":"[createConnection] Conexão com o banco de dados realizada.","service":"user-service","timestamp":"2022-08-03T04:28:30.238Z"}
{"level":"info","message":"[setup] API em execução.","service":"user-service","timestamp":"2022-08-03T04:28:30.252Z"}
{"level":"info","message":"[createConnection] Conexão com o banco de dados realizada.","service":"user-service","timestamp":"2022-08-03T04:36:22.577Z"}
{"level":"info","message":"[setup] API em execução.","service":"user-service","timestamp":"2022-08-03T04:36:22.590Z"}
{"level":"info","message":"[createConnection] Conexão com o banco de dados realizada.","service":"user-service","timestamp":"2022-08-03T04:51:25.742Z"}
{"level":"info","message":"[setup] API em execução.","service":"user-service","timestamp":"2022-08-03T04:51:25.755Z"}
{"level":"error","message":"[createPlan]Erro ao criar o plano: ValidationError: pets.0: Cast to [ObjectId] failed for value \"[\\n' +\n  '  Query {\\n' +\n  '    _mongooseOptions: {},\\n' +\n  '    _transforms: [],\\n' +\n  '    _hooks: Kareem { _pres: Map(0) {}, _posts: Map(0) {} },\\n' +\n  '    _executionStack: null,\\n' +\n  '    mongooseCollection: Collection {\\n' +\n  '      collection: [Collection],\\n' +\n  '      Promise: [Function: Promise],\\n' +\n  \"      modelName: 'Pets',\\n\" +\n  '      _closed: false,\\n' +\n  '      opts: [Object],\\n' +\n  \"      name: 'pets',\\n\" +\n  \"      collectionName: 'pets',\\n\" +\n  '      conn: [NativeConnection],\\n' +\n  '      queue: [],\\n' +\n  '      buffer: false,\\n' +\n  '      emitter: [EventEmitter]\\n' +\n  '    },\\n' +\n  '    model: Model { Pets },\\n' +\n  '    schema: Schema {\\n' +\n  '      obj: [Object],\\n' +\n  '      paths: [Object],\\n' +\n  '      aliases: {},\\n' +\n  '      subpaths: [Object],\\n' +\n  '      virtuals: [Object],\\n' +\n  '      singleNestedPaths: {},\\n' +\n  '      nested: {},\\n' +\n  '      inherits: {},\\n' +\n  '      callQueue: [],\\n' +\n  '      _indexes: [],\\n' +\n  '      methods: [Object],\\n' +\n  '      methodOptions: {},\\n' +\n  '      statics: {},\\n' +\n  '      tree: [Object],\\n' +\n  '      query: {},\\n' +\n  '      childSchemas: [],\\n' +\n  '      plugins: [Array],\\n' +\n  \"      '$id': 3,\\n\" +\n  '      mapPaths: [],\\n' +\n  '      s: [Object],\\n' +\n  '      _userProvidedOptions: [Object],\\n' +\n  '      options: [Object],\\n' +\n  \"      '$timestamps': [Object],\\n\" +\n  \"      '$globalPluginsApplied': true\\n\" +\n  '    },\\n' +\n  \"    op: 'findOne',\\n\" +\n  '    options: {},\\n' +\n  \"    _conditions: { _id: '62e9d0f8cf37c0a05d686db6' },\\n\" +\n  '    _fields: undefined,\\n' +\n  '    _update: undefined,\\n' +\n  '    _path: undefined,\\n' +\n  '    _distinct: undefined,\\n' +\n  \"    _collection: NodeCollection { collection: [Collection], collectionName: 'pets' },\\n\" +\n  '    _traceFunction: undefined,\\n' +\n  \"    '$useProjection': true\\n\" +\n  '  }\\n' +\n  ']\" (type string) at path \"pets.0\" because of \"CastError\"-  ::ffff:127.0.0.1","service":"user-service","timestamp":"2022-08-03T04:51:59.700Z"}
{"level":"info","message":"[createConnection] Conexão com o banco de dados realizada.","service":"user-service","timestamp":"2022-08-03T04:57:44.494Z"}
{"level":"info","message":"[setup] API em execução.","service":"user-service","timestamp":"2022-08-03T04:57:44.507Z"}
{"level":"error","message":"[createPlan]Erro ao criar o plano: ValidationError: pets.0: Cast to [ObjectId] failed for value \"[\\n' +\n  '  Query {\\n' +\n  '    _mongooseOptions: {},\\n' +\n  '    _transforms: [],\\n' +\n  '    _hooks: Kareem { _pres: Map(0) {}, _posts: Map(0) {} },\\n' +\n  '    _executionStack: null,\\n' +\n  '    mongooseCollection: Collection {\\n' +\n  '      collection: [Collection],\\n' +\n  '      Promise: [Function: Promise],\\n' +\n  \"      modelName: 'Pets',\\n\" +\n  '      _closed: false,\\n' +\n  '      opts: [Object],\\n' +\n  \"      name: 'pets',\\n\" +\n  \"      collectionName: 'pets',\\n\" +\n  '      conn: [NativeConnection],\\n' +\n  '      queue: [],\\n' +\n  '      buffer: false,\\n' +\n  '      emitter: [EventEmitter]\\n' +\n  '    },\\n' +\n  '    model: Model { Pets },\\n' +\n  '    schema: Schema {\\n' +\n  '      obj: [Object],\\n' +\n  '      paths: [Object],\\n' +\n  '      aliases: {},\\n' +\n  '      subpaths: [Object],\\n' +\n  '      virtuals: [Object],\\n' +\n  '      singleNestedPaths: {},\\n' +\n  '      nested: {},\\n' +\n  '      inherits: {},\\n' +\n  '      callQueue: [],\\n' +\n  '      _indexes: [],\\n' +\n  '      methods: [Object],\\n' +\n  '      methodOptions: {},\\n' +\n  '      statics: {},\\n' +\n  '      tree: [Object],\\n' +\n  '      query: {},\\n' +\n  '      childSchemas: [],\\n' +\n  '      plugins: [Array],\\n' +\n  \"      '$id': 3,\\n\" +\n  '      mapPaths: [],\\n' +\n  '      s: [Object],\\n' +\n  '      _userProvidedOptions: [Object],\\n' +\n  '      options: [Object],\\n' +\n  \"      '$timestamps': [Object],\\n\" +\n  \"      '$globalPluginsApplied': true\\n\" +\n  '    },\\n' +\n  \"    op: 'findOne',\\n\" +\n  '    options: {},\\n' +\n  \"    _conditions: { _id: '62e9d0f8cf37c0a05d686db6', nome: 'buta' },\\n\" +\n  '    _fields: undefined,\\n' +\n  '    _update: undefined,\\n' +\n  '    _path: undefined,\\n' +\n  '    _distinct: undefined,\\n' +\n  \"    _collection: NodeCollection { collection: [Collection], collectionName: 'pets' },\\n\" +\n  '    _traceFunction: undefined,\\n' +\n  \"    '$useProjection': true\\n\" +\n  '  }\\n' +\n  ']\" (type string) at path \"pets.0\" because of \"CastError\"-  ::ffff:127.0.0.1","service":"user-service","timestamp":"2022-08-03T04:58:51.360Z"}
{"level":"info","message":"[createConnection] Conexão com o banco de dados realizada.","service":"user-service","timestamp":"2022-08-03T05:00:04.392Z"}
{"level":"info","message":"[setup] API em execução.","service":"user-service","timestamp":"2022-08-03T05:00:04.408Z"}
{"level":"error","message":"[createPlan]Erro ao criar o plano: ValidationError: pets.0: Cast to [ObjectId] failed for value \"[\\n' +\n  '  Query {\\n' +\n  '    _mongooseOptions: {},\\n' +\n  '    _transforms: [],\\n' +\n  '    _hooks: Kareem { _pres: Map(0) {}, _posts: Map(0) {} },\\n' +\n  '    _executionStack: null,\\n' +\n  '    mongooseCollection: Collection {\\n' +\n  '      collection: [Collection],\\n' +\n  '      Promise: [Function: Promise],\\n' +\n  \"      modelName: 'Pets',\\n\" +\n  '      _closed: false,\\n' +\n  '      opts: [Object],\\n' +\n  \"      name: 'pets',\\n\" +\n  \"      collectionName: 'pets',\\n\" +\n  '      conn: [NativeConnection],\\n' +\n  '      queue: [],\\n' +\n  '      buffer: false,\\n' +\n  '      emitter: [EventEmitter]\\n' +\n  '    },\\n' +\n  '    model: Model { Pets },\\n' +\n  '    schema: Schema {\\n' +\n  '      obj: [Object],\\n' +\n  '      paths: [Object],\\n' +\n  '      aliases: {},\\n' +\n  '      subpaths: [Object],\\n' +\n  '      virtuals: [Object],\\n' +\n  '      singleNestedPaths: {},\\n' +\n  '      nested: {},\\n' +\n  '      inherits: {},\\n' +\n  '      callQueue: [],\\n' +\n  '      _indexes: [],\\n' +\n  '      methods: [Object],\\n' +\n  '      methodOptions: {},\\n' +\n  '      statics: {},\\n' +\n  '      tree: [Object],\\n' +\n  '      query: {},\\n' +\n  '      childSchemas: [],\\n' +\n  '      plugins: [Array],\\n' +\n  \"      '$id': 3,\\n\" +\n  '      mapPaths: [],\\n' +\n  '      s: [Object],\\n' +\n  '      _userProvidedOptions: [Object],\\n' +\n  '      options: [Object],\\n' +\n  \"      '$timestamps': [Object],\\n\" +\n  \"      '$globalPluginsApplied': true\\n\" +\n  '    },\\n' +\n  \"    op: 'findOne',\\n\" +\n  '    options: {},\\n' +\n  \"    _conditions: { _id: '62e9d0f8cf37c0a05d686db6', nome: 'buta' },\\n\" +\n  '    _fields: undefined,\\n' +\n  '    _update: undefined,\\n' +\n  '    _path: undefined,\\n' +\n  '    _distinct: undefined,\\n' +\n  \"    _collection: NodeCollection { collection: [Collection], collectionName: 'pets' },\\n\" +\n  '    _traceFunction: undefined,\\n' +\n  \"    '$useProjection': true\\n\" +\n  '  }\\n' +\n  ']\" (type string) at path \"pets.0\" because of \"CastError\"-  ::ffff:127.0.0.1","service":"user-service","timestamp":"2022-08-03T05:00:08.553Z"}
{"level":"info","message":"[createConnection] Conexão com o banco de dados realizada.","service":"user-service","timestamp":"2022-08-03T05:02:03.321Z"}
{"level":"info","message":"[setup] API em execução.","service":"user-service","timestamp":"2022-08-03T05:02:03.334Z"}
{"level":"error","message":"[createPlan]Erro ao criar o plano: ValidationError: pets: Cast to ObjectId failed for value \"[\n  Query {\n    _mongooseOptions: {},\n    _transforms: [],\n    _hooks: Kareem { _pres: Map(0) {}, _posts: Map(0) {} },\n    _executionStack: null,\n    mongooseCollection: Collection {\n      collection: [Collection],\n      Promise: [Function: Promise],\n      modelName: 'Pets',\n      _closed: false,\n      opts: [Object],\n      name: 'pets',\n      collectionName: 'pets',\n      conn: [NativeConnection],\n      queue: [],\n      buffer: false,\n      emitter: [EventEmitter]\n    },\n    model: Model { Pets },\n    schema: Schema {\n      obj: [Object],\n      paths: [Object],\n      aliases: {},\n      subpaths: [Object],\n      virtuals: [Object],\n      singleNestedPaths: {},\n      nested: {},\n      inherits: {},\n      callQueue: [],\n      _indexes: [],\n      methods: [Object],\n      methodOptions: {},\n      statics: {},\n      tree: [Object],\n      query: {},\n      childSchemas: [],\n      plugins: [Array],\n      '$id': 3,\n      mapPaths: [],\n      s: [Object],\n      _userProvidedOptions: [Object],\n      options: [Object],\n      '$timestamps': [Object],\n      '$globalPluginsApplied': true\n    },\n    op: 'findOne',\n    options: {},\n    _conditions: { _id: '62e9d0f8cf37c0a05d686db6', nome: 'buta' },\n    _fields: undefined,\n    _update: undefined,\n    _path: undefined,\n    _distinct: undefined,\n    _collection: NodeCollection { collection: [Collection], collectionName: 'pets' },\n    _traceFunction: undefined,\n    '$useProjection': true\n  }\n]\" (type Array) at path \"pets\" because of \"BSONTypeError\"-  ::ffff:127.0.0.1","service":"user-service","timestamp":"2022-08-03T05:02:05.096Z"}
{"level":"info","message":"[createConnection] Conexão com o banco de dados realizada.","service":"user-service","timestamp":"2022-08-03T05:02:38.624Z"}
{"level":"info","message":"[setup] API em execução.","service":"user-service","timestamp":"2022-08-03T05:02:38.639Z"}
{"level":"error","message":"[createPlan]Erro ao criar o plano: ValidationError: pets: Cast to ObjectId failed for value \"[\n  Query {\n    _mongooseOptions: {},\n    _transforms: [],\n    _hooks: Kareem { _pres: Map(0) {}, _posts: Map(0) {} },\n    _executionStack: null,\n    mongooseCollection: Collection {\n      collection: [Collection],\n      Promise: [Function: Promise],\n      modelName: 'Pets',\n      _closed: false,\n      opts: [Object],\n      name: 'pets',\n      collectionName: 'pets',\n      conn: [NativeConnection],\n      queue: [],\n      buffer: false,\n      emitter: [EventEmitter]\n    },\n    model: Model { Pets },\n    schema: Schema {\n      obj: [Object],\n      paths: [Object],\n      aliases: {},\n      subpaths: [Object],\n      virtuals: [Object],\n      singleNestedPaths: {},\n      nested: {},\n      inherits: {},\n      callQueue: [],\n      _indexes: [],\n      methods: [Object],\n      methodOptions: {},\n      statics: {},\n      tree: [Object],\n      query: {},\n      childSchemas: [],\n      plugins: [Array],\n      '$id': 3,\n      mapPaths: [],\n      s: [Object],\n      _userProvidedOptions: [Object],\n      options: [Object],\n      '$timestamps': [Object],\n      '$globalPluginsApplied': true\n    },\n    op: 'findOne',\n    options: {},\n    _conditions: { _id: '62e9d0f8cf37c0a05d686db6', nome: 'buta' },\n    _fields: undefined,\n    _update: undefined,\n    _path: undefined,\n    _distinct: undefined,\n    _collection: NodeCollection { collection: [Collection], collectionName: 'pets' },\n    _traceFunction: undefined,\n    '$useProjection': true\n  }\n]\" (type Array) at path \"pets\" because of \"BSONTypeError\"-  ::ffff:127.0.0.1","service":"user-service","timestamp":"2022-08-03T05:02:44.762Z"}
{"level":"info","message":"[createConnection] Conexão com o banco de dados realizada.","service":"user-service","timestamp":"2022-08-03T05:04:09.336Z"}
{"level":"info","message":"[setup] API em execução.","service":"user-service","timestamp":"2022-08-03T05:04:09.349Z"}
{"level":"error","message":"[createPlan]Erro ao criar o plano: ValidationError: pets: Cast to ObjectId failed for value \"[\n  Query {\n    _mongooseOptions: {},\n    _transforms: [],\n    _hooks: Kareem { _pres: Map(0) {}, _posts: Map(0) {} },\n    _executionStack: null,\n    mongooseCollection: Collection {\n      collection: [Collection],\n      Promise: [Function: Promise],\n      modelName: 'Pets',\n      _closed: false,\n      opts: [Object],\n      name: 'pets',\n      collectionName: 'pets',\n      conn: [NativeConnection],\n      queue: [],\n      buffer: false,\n      emitter: [EventEmitter]\n    },\n    model: Model { Pets },\n    schema: Schema {\n      obj: [Object],\n      paths: [Object],\n      aliases: {},\n      subpaths: [Object],\n      virtuals: [Object],\n      singleNestedPaths: {},\n      nested: {},\n      inherits: {},\n      callQueue: [],\n      _indexes: [],\n      methods: [Object],\n      methodOptions: {},\n      statics: {},\n      tree: [Object],\n      query: {},\n      childSchemas: [],\n      plugins: [Array],\n      '$id': 3,\n      mapPaths: [],\n      s: [Object],\n      _userProvidedOptions: [Object],\n      options: [Object],\n      '$timestamps': [Object],\n      '$globalPluginsApplied': true\n    },\n    op: 'findOne',\n    options: {},\n    _conditions: { _id: '62e9d0f8cf37c0a05d686db6', nome: 'buta' },\n    _fields: undefined,\n    _update: undefined,\n    _path: undefined,\n    _distinct: undefined,\n    _collection: NodeCollection { collection: [Collection], collectionName: 'pets' },\n    _traceFunction: undefined,\n    '$useProjection': true\n  }\n]\" (type Array) at path \"pets\" because of \"BSONTypeError\"-  ::ffff:127.0.0.1","service":"user-service","timestamp":"2022-08-03T05:04:11.966Z"}
{"level":"info","message":"[createConnection] Conexão com o banco de dados realizada.","service":"user-service","timestamp":"2022-08-03T05:05:20.296Z"}
{"level":"info","message":"[setup] API em execução.","service":"user-service","timestamp":"2022-08-03T05:05:20.313Z"}
{"level":"info","message":"[createConnection] Conexão com o banco de dados realizada.","service":"user-service","timestamp":"2022-08-03T05:05:43.862Z"}
{"level":"info","message":"[setup] API em execução.","service":"user-service","timestamp":"2022-08-03T05:05:43.878Z"}
{"level":"error","message":"[createPlan]Erro ao criar o plano: ValidationError: pets: Cast to ObjectId failed for value \"[\n  Query {\n    _mongooseOptions: {},\n    _transforms: [],\n    _hooks: Kareem { _pres: Map(0) {}, _posts: Map(0) {} },\n    _executionStack: null,\n    mongooseCollection: Collection {\n      collection: [Collection],\n      Promise: [Function: Promise],\n      modelName: 'Pets',\n      _closed: false,\n      opts: [Object],\n      name: 'pets',\n      collectionName: 'pets',\n      conn: [NativeConnection],\n      queue: [],\n      buffer: false,\n      emitter: [EventEmitter]\n    },\n    model: Model { Pets },\n    schema: Schema {\n      obj: [Object],\n      paths: [Object],\n      aliases: {},\n      subpaths: [Object],\n      virtuals: [Object],\n      singleNestedPaths: {},\n      nested: {},\n      inherits: {},\n      callQueue: [],\n      _indexes: [],\n      methods: [Object],\n      methodOptions: {},\n      statics: {},\n      tree: [Object],\n      query: {},\n      childSchemas: [],\n      plugins: [Array],\n      '$id': 3,\n      mapPaths: [],\n      s: [Object],\n      _userProvidedOptions: [Object],\n      options: [Object],\n      '$timestamps': [Object],\n      '$globalPluginsApplied': true\n    },\n    op: 'findOne',\n    options: {},\n    _conditions: { _id: '62e9d0f8cf37c0a05d686db6', nome: 'buta' },\n    _fields: undefined,\n    _update: undefined,\n    _path: undefined,\n    _distinct: undefined,\n    _collection: NodeCollection { collection: [Collection], collectionName: 'pets' },\n    _traceFunction: undefined,\n    '$useProjection': true\n  }\n]\" (type Array) at path \"pets\" because of \"BSONTypeError\"-  ::ffff:127.0.0.1","service":"user-service","timestamp":"2022-08-03T05:05:45.809Z"}
{"level":"info","message":"[createConnection] Conexão com o banco de dados realizada.","service":"user-service","timestamp":"2022-08-03T05:06:38.974Z"}
{"level":"info","message":"[setup] API em execução.","service":"user-service","timestamp":"2022-08-03T05:06:38.987Z"}
{"level":"error","message":"[createPlan]Erro ao criar o plano: ValidationError: pets: Cast to ObjectId failed for value \"[\n  Query {\n    _mongooseOptions: {},\n    _transforms: [],\n    _hooks: Kareem { _pres: Map(0) {}, _posts: Map(0) {} },\n    _executionStack: null,\n    mongooseCollection: Collection {\n      collection: [Collection],\n      Promise: [Function: Promise],\n      modelName: 'Pets',\n      _closed: false,\n      opts: [Object],\n      name: 'pets',\n      collectionName: 'pets',\n      conn: [NativeConnection],\n      queue: [],\n      buffer: false,\n      emitter: [EventEmitter]\n    },\n    model: Model { Pets },\n    schema: Schema {\n      obj: [Object],\n      paths: [Object],\n      aliases: {},\n      subpaths: [Object],\n      virtuals: [Object],\n      singleNestedPaths: {},\n      nested: {},\n      inherits: {},\n      callQueue: [],\n      _indexes: [],\n      methods: [Object],\n      methodOptions: {},\n      statics: {},\n      tree: [Object],\n      query: {},\n      childSchemas: [],\n      plugins: [Array],\n      '$id': 3,\n      mapPaths: [],\n      s: [Object],\n      _userProvidedOptions: [Object],\n      options: [Object],\n      '$timestamps': [Object],\n      '$globalPluginsApplied': true\n    },\n    op: 'findOne',\n    options: {},\n    _conditions: { _id: '62e9d0f8cf37c0a05d686db6', nome: 'buta' },\n    _fields: undefined,\n    _update: undefined,\n    _path: undefined,\n    _distinct: undefined,\n    _collection: NodeCollection { collection: [Collection], collectionName: 'pets' },\n    _traceFunction: undefined,\n    '$useProjection': true\n  }\n]\" (type Array) at path \"pets\" because of \"BSONTypeError\"-  ::ffff:127.0.0.1","service":"user-service","timestamp":"2022-08-03T05:06:42.393Z"}
{"level":"info","message":"[createConnection] Conexão com o banco de dados realizada.","service":"user-service","timestamp":"2022-08-03T05:07:52.941Z"}
{"level":"info","message":"[setup] API em execução.","service":"user-service","timestamp":"2022-08-03T05:07:52.954Z"}
{"level":"error","message":"[createPlan]Erro ao criar o plano: ValidationError: pets: Cast to ObjectId failed for value \"[\n  Query {\n    _mongooseOptions: {},\n    _transforms: [],\n    _hooks: Kareem { _pres: Map(0) {}, _posts: Map(0) {} },\n    _executionStack: null,\n    mongooseCollection: Collection {\n      collection: [Collection],\n      Promise: [Function: Promise],\n      modelName: 'Pets',\n      _closed: false,\n      opts: [Object],\n      name: 'pets',\n      collectionName: 'pets',\n      conn: [NativeConnection],\n      queue: [],\n      buffer: false,\n      emitter: [EventEmitter]\n    },\n    model: Model { Pets },\n    schema: Schema {\n      obj: [Object],\n      paths: [Object],\n      aliases: {},\n      subpaths: [Object],\n      virtuals: [Object],\n      singleNestedPaths: {},\n      nested: {},\n      inherits: {},\n      callQueue: [],\n      _indexes: [],\n      methods: [Object],\n      methodOptions: {},\n      statics: {},\n      tree: [Object],\n      query: {},\n      childSchemas: [],\n      plugins: [Array],\n      '$id': 3,\n      mapPaths: [],\n      s: [Object],\n      _userProvidedOptions: [Object],\n      options: [Object],\n      '$timestamps': [Object],\n      '$globalPluginsApplied': true\n    },\n    op: 'findOne',\n    options: {},\n    _conditions: { _id: '62e9d0f8cf37c0a05d686db6', nome: 'buta' },\n    _fields: undefined,\n    _update: undefined,\n    _path: undefined,\n    _distinct: undefined,\n    _collection: NodeCollection { collection: [Collection], collectionName: 'pets' },\n    _traceFunction: undefined,\n    '$useProjection': true\n  }\n]\" (type Array) at path \"pets\" because of \"BSONTypeError\"-  ::ffff:127.0.0.1","service":"user-service","timestamp":"2022-08-03T05:08:21.178Z"}
{"level":"info","message":"[createConnection] Conexão com o banco de dados realizada.","service":"user-service","timestamp":"2022-08-03T05:09:12.000Z"}
{"level":"info","message":"[setup] API em execução.","service":"user-service","timestamp":"2022-08-03T05:09:12.013Z"}
{"level":"error","message":"[createPlan]Erro ao criar o plano: ValidationError: pets: Cast to ObjectId failed for value \"[\n  Query {\n    _mongooseOptions: {},\n    _transforms: [],\n    _hooks: Kareem { _pres: Map(0) {}, _posts: Map(0) {} },\n    _executionStack: null,\n    mongooseCollection: Collection {\n      collection: [Collection],\n      Promise: [Function: Promise],\n      modelName: 'Pets',\n      _closed: false,\n      opts: [Object],\n      name: 'pets',\n      collectionName: 'pets',\n      conn: [NativeConnection],\n      queue: [],\n      buffer: false,\n      emitter: [EventEmitter]\n    },\n    model: Model { Pets },\n    schema: Schema {\n      obj: [Object],\n      paths: [Object],\n      aliases: {},\n      subpaths: [Object],\n      virtuals: [Object],\n      singleNestedPaths: {},\n      nested: {},\n      inherits: {},\n      callQueue: [],\n      _indexes: [],\n      methods: [Object],\n      methodOptions: {},\n      statics: {},\n      tree: [Object],\n      query: {},\n      childSchemas: [],\n      plugins: [Array],\n      '$id': 3,\n      mapPaths: [],\n      s: [Object],\n      _userProvidedOptions: [Object],\n      options: [Object],\n      '$timestamps': [Object],\n      '$globalPluginsApplied': true\n    },\n    op: 'findOne',\n    options: {},\n    _conditions: { _id: '62e9d0f8cf37c0a05d686db6', nome: undefined },\n    _fields: undefined,\n    _update: undefined,\n    _path: undefined,\n    _distinct: undefined,\n    _collection: NodeCollection { collection: [Collection], collectionName: 'pets' },\n    _traceFunction: undefined,\n    '$useProjection': true\n  }\n]\" (type Array) at path \"pets\" because of \"BSONTypeError\"-  ::ffff:127.0.0.1","service":"user-service","timestamp":"2022-08-03T05:09:21.217Z"}
{"level":"info","message":"[createConnection] Conexão com o banco de dados realizada.","service":"user-service","timestamp":"2022-08-03T05:10:24.266Z"}
{"level":"info","message":"[setup] API em execução.","service":"user-service","timestamp":"2022-08-03T05:10:24.280Z"}
{"level":"error","message":"[createPlan]Erro ao criar o plano: ValidationError: pets: Cast to ObjectId failed for value \"[\n  Query {\n    _mongooseOptions: {},\n    _transforms: [],\n    _hooks: Kareem { _pres: Map(0) {}, _posts: Map(0) {} },\n    _executionStack: null,\n    mongooseCollection: Collection {\n      collection: [Collection],\n      Promise: [Function: Promise],\n      modelName: 'Pets',\n      _closed: false,\n      opts: [Object],\n      name: 'pets',\n      collectionName: 'pets',\n      conn: [NativeConnection],\n      queue: [],\n      buffer: false,\n      emitter: [EventEmitter]\n    },\n    model: Model { Pets },\n    schema: Schema {\n      obj: [Object],\n      paths: [Object],\n      aliases: {},\n      subpaths: [Object],\n      virtuals: [Object],\n      singleNestedPaths: {},\n      nested: {},\n      inherits: {},\n      callQueue: [],\n      _indexes: [],\n      methods: [Object],\n      methodOptions: {},\n      statics: {},\n      tree: [Object],\n      query: {},\n      childSchemas: [],\n      plugins: [Array],\n      '$id': 3,\n      mapPaths: [],\n      s: [Object],\n      _userProvidedOptions: [Object],\n      options: [Object],\n      '$timestamps': [Object],\n      '$globalPluginsApplied': true\n    },\n    op: 'findOne',\n    options: {},\n    _conditions: { _id: '62e9d0f8cf37c0a05d686db6', nome: undefined },\n    _fields: undefined,\n    _update: undefined,\n    _path: undefined,\n    _distinct: undefined,\n    _collection: NodeCollection { collection: [Collection], collectionName: 'pets' },\n    _traceFunction: undefined,\n    '$useProjection': true\n  }\n]\" (type Array) at path \"pets\" because of \"BSONTypeError\"-  ::ffff:127.0.0.1","service":"user-service","timestamp":"2022-08-03T05:10:27.889Z"}
{"level":"info","message":"[createConnection] Conexão com o banco de dados realizada.","service":"user-service","timestamp":"2022-08-03T05:11:49.950Z"}
{"level":"info","message":"[setup] API em execução.","service":"user-service","timestamp":"2022-08-03T05:11:49.963Z"}
{"level":"info","message":"[createConnection] Conexão com o banco de dados realizada.","service":"user-service","timestamp":"2022-08-03T05:12:32.724Z"}
{"level":"info","message":"[setup] API em execução.","service":"user-service","timestamp":"2022-08-03T05:12:32.739Z"}
{"level":"info","message":"[createConnection] Conexão com o banco de dados realizada.","service":"user-service","timestamp":"2022-08-03T05:13:44.669Z"}
{"level":"info","message":"[setup] API em execução.","service":"user-service","timestamp":"2022-08-03T05:13:44.683Z"}
{"level":"info","message":"[createPet]Pet cadastrado: ::ffff:127.0.0.1","service":"user-service","timestamp":"2022-08-03T05:14:38.160Z"}
{"level":"info","message":"[createPet]Pet cadastrado: ::ffff:127.0.0.1","service":"user-service","timestamp":"2022-08-03T05:14:42.351Z"}
{"level":"info","message":"[createConnection] Conexão com o banco de dados realizada.","service":"user-service","timestamp":"2022-08-03T05:16:35.904Z"}
{"level":"info","message":"[setup] API em execução.","service":"user-service","timestamp":"2022-08-03T05:16:35.921Z"}
{"level":"info","message":"[createConnection] Conexão com o banco de dados realizada.","service":"user-service","timestamp":"2022-08-03T05:18:31.982Z"}
{"level":"info","message":"[setup] API em execução.","service":"user-service","timestamp":"2022-08-03T05:18:31.996Z"}
{"level":"info","message":"[createConnection] Conexão com o banco de dados realizada.","service":"user-service","timestamp":"2022-08-03T05:20:40.416Z"}
{"level":"info","message":"[setup] API em execução.","service":"user-service","timestamp":"2022-08-03T05:20:40.432Z"}
{"level":"info","message":"[createConnection] Conexão com o banco de dados realizada.","service":"user-service","timestamp":"2022-08-03T05:22:02.427Z"}
{"level":"info","message":"[setup] API em execução.","service":"user-service","timestamp":"2022-08-03T05:22:02.441Z"}
{"level":"info","message":"[createConnection] Conexão com o banco de dados realizada.","service":"user-service","timestamp":"2022-08-03T05:23:41.896Z"}
{"level":"info","message":"[setup] API em execução.","service":"user-service","timestamp":"2022-08-03T05:23:41.913Z"}
{"level":"info","message":"[createConnection] Conexão com o banco de dados realizada.","service":"user-service","timestamp":"2022-08-03T05:30:19.136Z"}
{"level":"info","message":"[setup] API em execução.","service":"user-service","timestamp":"2022-08-03T05:30:19.155Z"}
{"level":"error","message":"[createPlan]Erro ao criar o plano: ValidationError: pet.1: Cast to [ObjectId] failed for value \"`[ new ObjectId(\"62ea043e178a6c711a0ebbbc\"), 'buta' ]`\" (type string) at path \"pet.1\" because of \"CastError\"-  ::ffff:127.0.0.1","service":"user-service","timestamp":"2022-08-03T05:30:21.309Z"}
{"level":"info","message":"[createConnection] Conexão com o banco de dados realizada.","service":"user-service","timestamp":"2022-08-03T05:33:46.734Z"}
{"level":"info","message":"[setup] API em execução.","service":"user-service","timestamp":"2022-08-03T05:33:46.750Z"}
{"level":"error","message":"[createPlan]Erro ao criar o plano: ValidationError: pet.1: Cast to [ObjectId] failed for value \"`[ new ObjectId(\"62ea043e178a6c711a0ebbbc\"), 'buta' ]`\" (type string) at path \"pet.1\" because of \"CastError\"-  ::ffff:127.0.0.1","service":"user-service","timestamp":"2022-08-03T05:33:48.009Z"}
{"level":"error","message":"[createPlan]Erro ao criar o plano: ValidationError: pet.1: Cast to [ObjectId] failed for value \"`[ new ObjectId(\"62ea043e178a6c711a0ebbbc\"), 'buta' ]`\" (type string) at path \"pet.1\" because of \"CastError\"-  ::ffff:127.0.0.1","service":"user-service","timestamp":"2022-08-03T05:33:51.137Z"}
{"level":"error","message":"[createPlan]Erro ao criar o plano: ValidationError: pet.1: Cast to [ObjectId] failed for value \"`[ new ObjectId(\"62ea043e178a6c711a0ebbbc\"), 'buta' ]`\" (type string) at path \"pet.1\" because of \"CastError\"-  ::ffff:127.0.0.1","service":"user-service","timestamp":"2022-08-03T05:33:52.798Z"}
{"level":"info","message":"[createConnection] Conexão com o banco de dados realizada.","service":"user-service","timestamp":"2022-08-03T05:35:26.791Z"}
{"level":"info","message":"[setup] API em execução.","service":"user-service","timestamp":"2022-08-03T05:35:26.804Z"}
{"level":"error","message":"[createPlan]Erro ao criar o plano: ValidationError: pet.1: Cast to [ObjectId] failed for value \"`[ new ObjectId(\"62ea043e178a6c711a0ebbbc\"), 'buta' ]`\" (type string) at path \"pet.1\" because of \"CastError\"-  ::ffff:127.0.0.1","service":"user-service","timestamp":"2022-08-03T05:35:33.830Z"}
{"level":"info","message":"[createConnection] Conexão com o banco de dados realizada.","service":"user-service","timestamp":"2022-08-03T05:37:14.472Z"}
{"level":"info","message":"[setup] API em execução.","service":"user-service","timestamp":"2022-08-03T05:37:14.487Z"}
{"level":"error","message":"[createPlan]Erro ao criar o plano: ValidationError: pet.1: Cast to [ObjectId] failed for value \"`[ new ObjectId(\"62ea043e178a6c711a0ebbbc\"), 'buta' ]`\" (type string) at path \"pet.1\" because of \"CastError\"-  ::ffff:127.0.0.1","service":"user-service","timestamp":"2022-08-03T05:37:18.545Z"}
{"level":"info","message":"[createConnection] Conexão com o banco de dados realizada.","service":"user-service","timestamp":"2022-08-03T05:37:57.300Z"}
{"level":"info","message":"[setup] API em execução.","service":"user-service","timestamp":"2022-08-03T05:37:57.317Z"}
{"level":"error","message":"[createPlan]Erro ao criar o plano: ValidationError: pet.1: Cast to [ObjectId] failed for value \"`[ new ObjectId(\"62ea043e178a6c711a0ebbbc\"), 'buta' ]`\" (type string) at path \"pet.1\" because of \"CastError\"-  ::ffff:127.0.0.1","service":"user-service","timestamp":"2022-08-03T05:37:58.868Z"}
{"level":"info","message":"[createConnection] Conexão com o banco de dados realizada.","service":"user-service","timestamp":"2022-08-03T05:38:31.559Z"}
{"level":"info","message":"[setup] API em execução.","service":"user-service","timestamp":"2022-08-03T05:38:31.577Z"}
{"level":"error","message":"[createPlan]Erro ao criar o plano: ValidationError: pet.0: Cast to [ObjectId] failed for value \"[ 'buta' ]\" (type string) at path \"pet.0\" because of \"CastError\"-  ::ffff:127.0.0.1","service":"user-service","timestamp":"2022-08-03T05:38:34.699Z"}
{"level":"info","message":"[createConnection] Conexão com o banco de dados realizada.","service":"user-service","timestamp":"2022-08-03T05:39:14.243Z"}
{"level":"info","message":"[setup] API em execução.","service":"user-service","timestamp":"2022-08-03T05:39:14.256Z"}
{"level":"info","message":"[createConnection] Conexão com o banco de dados realizada.","service":"user-service","timestamp":"2022-08-03T05:40:50.296Z"}
{"level":"info","message":"[setup] API em execução.","service":"user-service","timestamp":"2022-08-03T05:40:50.310Z"}
{"level":"info","message":"[createConnection] Conexão com o banco de dados realizada.","service":"user-service","timestamp":"2022-08-03T05:43:41.933Z"}
{"level":"info","message":"[setup] API em execução.","service":"user-service","timestamp":"2022-08-03T05:43:41.947Z"}
{"level":"info","message":"[createConnection] Conexão com o banco de dados realizada.","service":"user-service","timestamp":"2022-08-03T05:44:55.745Z"}
{"level":"info","message":"[setup] API em execução.","service":"user-service","timestamp":"2022-08-03T05:44:55.765Z"}
{"level":"error","message":"[createPlan]Erro ao criar o plano: ValidationError: pet.1: Cast to [ObjectId] failed for value \"`[ new ObjectId(\"62ea0442178a6c711a0ebbc1\"), 'butao' ]`\" (type string) at path \"pet.1\" because of \"CastError\"-  ::ffff:127.0.0.1","service":"user-service","timestamp":"2022-08-03T05:45:08.983Z"}
{"level":"info","message":"[createConnection] Conexão com o banco de dados realizada.","service":"user-service","timestamp":"2022-08-03T05:56:03.412Z"}
{"level":"info","message":"[setup] API em execução.","service":"user-service","timestamp":"2022-08-03T05:56:03.425Z"}
